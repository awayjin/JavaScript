## 最新的模板文件: https://git.vankeservice.com/renz-public/project-template
## 使用说明： https://git.vankeservice.com/renz-public/gitlab-ci-templates
include:
  - project: 'renz-public/gitlab-ci-templates'
    ref: master
    file: '.gitlab-ci-template.yml'

## 定义变量, 供后面的任务使用, 请仔细核对
variables:
  ## K8S 命名空间1
  K8S_NS: neighbor
  ## 会判断当前是否是生产分支， 添加一个ENV环境变量
  ## 如果是生产环境分支， 则ENV=prod, 其他情况默认 ENV=test
  ## ENV环境变量仅在CI/CD周期可用，不影响运行环境
  ## 但会通过命令行参数传递给dockerfile, (docker build --build-arg ENV=${ENV} ......)
  ## 生产环境分支, 默认是production分支
  # PROD_BRANCH: master       ## 选填
  ## 测试环境分支, 默认是master分支
  # TEST_BRANCH: test         ## 选填
  ## 如需使用 master/test分支作为生产/测试分支， 请取消注释上面两个环境变量

  ## 项目名称, 由小写和-组成， 作为镜像名和helm包名
  # NAME: ""        ##  选填

  ## 企业微信机器人通知key
  # TEST_WECHAT_KEY: ""      ## 选填,不填使用默认机器人
  # PROD_WECHAT_KEY: ""      ## 选填,不填使用默认机器人

  ## 使用的chart template version
  ## https://git.vankeservice.com/renz-public/helm-chart-template/-/tags
  ## 使用新版本，需要在部署job页面检查diff， 查看变换是否符合预期
  # CHART_TEMP_VERSION: "v1.0"       ## 选填

  ## helm chart 路径， 默认是项目根目录下的chart/
  # CHART_PATH: chart/    ## 选填，默认是chart/

  ## Dockerfile名称， 默认是Dockerfile
  ## Dockerfile路径， 默认是项目根目录
  # DOCKERFILE_NAME: Dockerfile    ## 选填, 默认是Dockerfile
  ## 选填, 默认是项目根目录
  #DOCKERFILE_PATH: dockfiles/${ENV}/

  ## submodule名称, 项目有使用submodule才填写, 没使用不理会, 如果使用需填写path
  # SUBMODULE: ""         ## 选填
  ## eg: git.vankeservice.com/zhuzher/vs/zhuzher_common.git
  # SUBMODULE_PATH: ""    ## 选填

  ## 本来Canary是指金丝雀发布，我们暂时借用k8s的ingress controller的这种功能
  ## 在测试环境作为第二测试环境， 来解决争抢测试环境的问题
  ## 生产环境的Canary， 依然指的是金丝雀发布
  ## 通过header访问不同的环境
  ## 使用方法: https://git.vankeservice.com/snippets/61
  # TEST_CANARY: enable     ## 选填, 默认不开启
  # PROD_CANARY: enable     ## 选填, 默认不开启

  ## sonar代码检测相关变量
  # SONAR_PATH: "."
  # SONAR_LOGIN: ""        # sonar提供的token
  # SONAR_PROJ: ""         # 注册项目名, 默认是项目名称(NAME)

  ## 测试/生产环境访问地址
  TEST_URL: "6f016c95-030d-4e94-92f1-256b33fd01e4"       ## 选填
  PROD_URL: "6f016c95-030d-4e94-92f1-256b33fd01e4"       ## 选填

  ## ATS 接口测试id

  # TEST_ATS_PRODUCT_ID: ""    ## 选填, 默认不开启
  # PROD_ATS_PRODUCT_ID: ""    ## 选填, 默认不开启

  ## Docker register group
  GROUP: neighbor
  # k8s ctx
  TEST_CTX: neighbor-test
  PROD_CTX: neighbor-prod

## 单元测试，各项目开发自行编写
## 把下行的 "." 去掉可以开启
.unittest:
  stage: unittest
  interruptible: true
  retry: 2
  image:
    name: ${REGISTER}/${GROUP}/${CI_PROJECT_PATH_SLUG}:unittest
    entrypoint: [""]
  # services:
  #   - name: postgres
  #     alias: db-postgres
  #     entrypoint: ["/usr/local/bin/db-postgres"]
  #     command: ["start"]
  tags:
    - docker
  variables:
    foo: bar
    # POSTGRES_USER: test
    # POSTGRES_PASSWORD: test
  script:
    - echo test
  rules:
    - if: '$CI_PROJECT_NAMESPACE !~ /^pulin\//'
      when: never
    - if: '$CI_COMMIT_REF_NAME == $PROD_BRANCH || $CI_COMMIT_REF_NAME == $TEST_BRANCH'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
