<!DOCTYPE html>
<html>
<head>
    <title>Lazy Loading Example</title>
</head>
<body>
<header>
	<h1>test</h1>
</header>

<script type="text/javascript">
/*
  3.0 函数绑定
  4.0 函数柯里化 function currying
 */
 
//4.0 函数柯里化
function sum(num1, num2){
	return num1 + num2;	
}
function callSum1(num){
	return sum(10, num)
}

function curry(fn){
	var args = Array.prototype.slice.call(arguments, 1)	
}

function test(fn){
    console.log(arguments);
}

var num1 = 10, num2 =12;
function cc(num1, num2){};
test(cc)


// 3.0 函数绑定
var handler = {
	msg: "event load",
	handlerClick: function(event){
		alert(this.msg + ", " +event.type)	
	}
}; 

var EventUtil = {
	addHandler: function(element, type, handler){
		if(typeof addEventListener !== 'undefined'){
			element.addEventListener(type, handler, false);
		}else if(typeof attachEvent){
			element.attachEvent('on' + type, handler);	
		}else{
			element['on' + type] = handler;	
		}
	}	
};

var test = document.querySelector("header h1");
var test = test || document.getElementsByTagName("h1")[0];

//闭包的形式
//EventUtil.addHandler(test, "click", function(event){
	//handler.handlerClick(event);
//});

//3.3 函数绑定
function bind(fn, context){
	return function(){
		fn.apply(context, arguments)	
	}
}

EventUtil.addHandler(test, "click", bind(handler.handlerClick, handler));



//alert(handler.handlerClick())

</script>
</body>
</html>
